AWSTemplateFormatVersion: 2010-09-09
Mappings:
  Network:
    wordpressSite:
      vpcCirdBlock: 10.0.0.0/16
      publicSubnet1: 10.0.0.0/24
      privateSubnet1: 10.0.1.0/24
      privateSubnet2: 10.0.2.0/24
  Domain:
    NameServers:
      goDaddy:
        - ns-564.awsdns-06.net.
        - ns-1229.awsdns-25.org.
        - ns-87.awsdns-10.com.
        - ns-1835.awsdns-37.co.uk.
Parameters:
  DBUser:
    NoEcho: 'true'
    Description: The database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
  DBPassword:
    NoEcho: 'true'
    Description: The database admin account password
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
  DBName:
    Default: wordpressdb
    Description: The database admin account password
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z0-9]*'
  InstanceKeyPairName:
    Description: Instance keypair
    Type: 'AWS::EC2::KeyPair::KeyName'
Resources:
  EC2VPCGN0HO:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref WordpressIG
      VpcId: !Ref VPC
  WordpressInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      NetworkInterfaces:
        - AssociatePublicIpAddress: 'true'
          SubnetId: !Ref PublicSubnet1
          GroupSet:
            - !Ref EC2SG3AKQ0
          DeviceIndex: '0'
      InstanceType: t2.micro
      # update this to the latest available linux image
      ImageId: ami-006a0174c6c25ac06
      KeyName: !Ref InstanceKeyPairName
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: WordpressInstance
  EC2SRTA2MFZY:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref WordpressRT
      SubnetId: !Ref PublicSubnet1
  WordpressRT:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
  WordpressIG:
    Type: 'AWS::EC2::InternetGateway'
    Properties: {}
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !FindInMap
        - Network
        - wordpressSite
        - publicSubnet1
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !FindInMap
        - Network
        - wordpressSite
        - privateSubnet1
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !FindInMap
        - Network
        - wordpressSite
        - privateSubnet2
      AvailabilityZone: !Select
        - 1
        - !GetAZs ''
  DBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: DatabaseGroup for mysql instance
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
  RDSDbInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      AllocatedStorage: '20'
      AllowMajorVersionUpgrade: 'false'
      AutoMinorVersionUpgrade: 'true'
      BackupRetentionPeriod: '30'
      DBInstanceClass: db.t2.micro
      DBName: !Ref DBName
      DBSubnetGroupName: !Ref DBSubnetGroup
      Engine: mysql
      EngineVersion: 8.0.16
      PreferredBackupWindow: '01:00-03:00'
      PreferredMaintenanceWindow: 'sun:06:00-sun:06:30'
      MasterUsername: !Ref DBUser
      MasterUserPassword: !Ref DBPassword
      PubliclyAccessible: 'false'
      VPCSecurityGroups:
        - !GetAtt
          - RDSSecurityGroup
          - GroupId
  RDSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable 3306 access from VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          CidrIp: !FindInMap
            - Network
            - wordpressSite
            - publicSubnet1
      VpcId: !Ref VPC
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
  EC2EIP4BI5Q:
    Type: 'AWS::EC2::EIP'
    Properties:
      InstanceId: !Ref WordpressInstance
  WebIngressSG:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref EC2SG3AKQ0
      CidrIp: 0.0.0.0/0
      Description: Web access
      FromPort: 80
      IpProtocol: tcp
      ToPort: 80
  SSHIngressSG:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref EC2SG3AKQ0
      CidrIp: 0.0.0.0/0
      Description: SSH access
      FromPort: 22
      IpProtocol: tcp
      ToPort: 22
  EC2SG3AKQ0:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: vpc and instance sg
      VpcId: !Ref VPC
  PublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref WordpressRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref WordpressIG
